import{d as n,a2 as t,a$ as o,b0 as e,a as l}from"./index-HMHCBO22.js";var a=function(n,t,o,e){return new(o||(o=Promise))((function(l,a){function i(n){try{c(e.next(n))}catch(t){a(t)}}function r(n){try{c(e.throw(n))}catch(t){a(t)}}function c(n){var t;n.done?l(n.value):(t=n.value,t instanceof o?t:new o((function(n){n(t)}))).then(i,r)}c((e=e.apply(n,t||[])).next())}))};const i=n({name:"InfiniteScroll",props:{distance:{type:Number,default:0},onLoad:Function,scrollbarProps:Object},setup(n){const t=l(null);let o=!1;const e=()=>a(this,void 0,void 0,(function*(){var e;const{value:l}=t;if(l){const{containerRef:t}=l,i=null==t?void 0:t.scrollHeight,r=null==t?void 0:t.clientHeight,c=null==t?void 0:t.scrollTop;if(t&&void 0!==i&&void 0!==r&&void 0!==c&&c+r>=i-n.distance){o=!0;try{yield null===(e=n.onLoad)||void 0===e?void 0:e.call(n)}catch(a){}o=!1}}}));return{scrollbarInstRef:t,handleScroll:()=>{o||e()},handleWheel:n=>{n.deltaY<=0||o||e()}}},render(){return t(o,Object.assign({},this.scrollbarProps,{ref:"scrollbarInstRef",onWheel:this.handleWheel,onScroll:this.handleScroll}),{default:()=>e(this.$slots.default,(()=>[]))})}});export{i as N};
